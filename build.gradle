plugins {
    id 'org.springframework.boot' version '3.5.4' apply false
    id 'io.spring.dependency-management' version '1.1.4' apply false
    id 'org.sonarqube' version '5.1.0.4882'
    id 'java'
}

allprojects {
    group = 'com.example'
    version = '1.0.0-SNAPSHOT'
    
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'  // api 의존성 사용을 위해 추가
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.sonarqube'
    
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }
    
    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }
    
    dependencyManagement {
        imports {
            mavenBom 'org.springframework.boot:spring-boot-dependencies:3.5.4'
        }
        dependencies {
            // 추가 라이브러리 버전 관리
            dependency 'com.google.guava:guava:32.1.3-jre'
            dependency 'org.threeten:threeten-extra:1.8.0'
            dependency 'org.javamoney:moneta:1.4.5'
            dependency 'com.querydsl:querydsl-jpa:5.1.0'
            dependency 'com.querydsl:querydsl-apt:5.1.0'
            dependency 'com.vladmihalcea:hibernate-types-60:2.21.1'
            dependency 'org.springframework.boot:spring-boot-starter-data-redis:3.5.4'
            dependency 'org.redisson:redisson-spring-boot-starter:3.50.0'
            dependency 'com.bucket4j:bucket4j-core:8.0.1'
            dependency 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
            dependency 'com.opencsv:opencsv:5.12.0'
            dependency 'org.apache.poi:poi-ooxml:5.4.1'
        }
    }
    
    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }
    
    tasks.named('test') {
        useJUnitPlatform()
    }
}

// Spring Boot 플러그인을 실행 가능한 애플리케이션에만 적용
configure(subprojects.findAll { it.name == 'user-api' || it.name == 'batch-app' }) {
    apply plugin: 'org.springframework.boot'
}

// 컨테이너 모듈들은 빌드 제외
configure(subprojects.findAll { it.name == 'common' || it.name == 'domain' || it.name == 'infrastructure' || it.name == 'application' }) {
    // 이러한 컨테이너 모듈들은 jar 생성하지 않음
    tasks.named('jar') { enabled = false }
}

// SonarQube 설정
sonar {
    properties {
        property "sonar.projectKey", "SeokRae_multi-module-example"
        property "sonar.organization", "seokrae"  // GitHub 사용자명 기반
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.exclusions", "**/*Application.java,**/*Config.java,**/*Exception.java"
        property "sonar.cpd.exclusions", "**/*Entity.java,**/*Dto.java,**/*Request.java,**/*Response.java"
        property "sonar.java.source", "17"
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java"
        property "sonar.junit.reportPaths", "build/test-results/test"
        property "sonar.jacoco.reportPaths", "build/jacoco/test.exec"
    }
}