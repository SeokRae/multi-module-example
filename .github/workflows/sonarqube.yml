name: SonarQube Code Analysis

on:
  workflow_dispatch:  # 수동 실행
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Sonar 분석을 위한 전체 히스토리
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build and analyze with SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          # SONAR_TOKEN이 설정되어 있는 경우에만 SonarQube 분석 실행
          if [ -n "$SONAR_TOKEN" ]; then
            echo "🔍 Running SonarQube analysis..."
            ./gradlew build sonar --info
          else
            echo "⚠️ SONAR_TOKEN not configured. Running build only..."
            echo "To enable SonarQube analysis:"
            echo "1. Create a SonarCloud account and project"
            echo "2. Generate a token and add it as SONAR_TOKEN secret"
            echo "3. Update sonar.projectKey and sonar.organization in build.gradle"
            ./gradlew build --info
          fi